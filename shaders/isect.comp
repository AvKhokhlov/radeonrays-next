#version 450
#define INVALID_ADDR 0xffffffffu

struct Ray {
	vec3 direction;
	float time;
	vec3 origin;
	float max_t;
};

struct BVHNode {
	vec3 aabb_left_min_or_v0;
	uint addr_left;
	vec3 aabb_left_max_or_v1;
	uint mesh_id;
	vec3 aabb_right_min_or_v2;
	uint addr_right;
	vec3 aabb_right_max;
	uint prim_id;
};

layout(set = 0, binding = 0) buffer Rays {
	Ray rays[];
};

layout(set = 0, binding = 1) buffer BVH {
	BVHNode bvh[];
};

layout (push_constant) uniform PushConstants {
	uint N;
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() {
	uint index = gl_GlobalInvocationID.x;
	
	if (index >= N) 
		return;	

	Ray myRay;
	myRay.direction = vec3(1.0, 1.0, 1.0);
	myRay.origin = vec3(2.0, 2.0, 2.0);
	myRay.time = float(index);
	myRay.max_t = 1000.0;

	rays[index] = myRay;
}